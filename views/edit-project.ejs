<%- include("partials/header"); -%>
    <link rel="stylesheet" href="/css/compose.css">

    <h1 style="align-items: center; text-align: center;">Edit Project <%=project.title%>
    </h1>
    <form class="container" action="/update/<%= project._id %>" method="post" enctype="multipart/form-data"
        style="margin-bottom: 50px;">
        <div class="form-group">
            <h2 style="align-items: center; text-align: center;">General Details</h2>
            <label class="label">Title</label>
            <input class="form-control" type="text" name="title" value="<%= project.title %>" required />

            <label class="label">Sector</label>
            <input class="form-control" type="text" name="author" value="<%= project.author %>" required />

            <label class="label">About the Project</label>
            <textarea class="form-control" name="content" rows="5" cols="30" required><%= project.content %></textarea>
            <br>
            <br>

            <h2 style="align-items: center; text-align: center;">Specifications</h2>
            <div id="specifications-container">
                <!-- Loop through the specifications array -->
                <% for (let i=0; i < project.specifications.length; i++) { %>
                    <div class="specification-input">
                        <label class="label">Specification <%= i + 1 %></label>
                        <input class="form-control" type="text" name="specifications[]"
                            value="<%= project.specifications[i] %>" />
                        <button type="button" class="remove-specification btn btn-danger"
                            style="margin: 5px;">Remove</button>
                    </div>
                    <% } %>
            </div>
            <button type="button" id="add-specification" class="btn btn-success" style="margin: 5px;">Add
                Specification</button>
            <br>
            <br>
            <br>

            <label class="label">Luxury Specifications</label>
            <input class="form-control" type="text" name="Lspec" value="<%= project.Lspec %>"
                placeholder="Luxury Specifications" />

            <br>
            <br>
            <br>

            <h2 style="align-items: center; text-align: center;">Features</h2>
            <div id="feature-container">
                <!-- Loop through the features array -->
                <% for (let i=0; i < project.features.length; i++) { %>
                    <div class="feature-input">
                        <label class="label">Feature <%= i + 1 %></label>
                        <input class="form-control" type="text" name="features[]" value="<%= project.features[i] %>" />
                        <button type="button" class="remove-feature btn btn-danger" style="margin: 5px;">Remove</button>
                    </div>
                    <% } %>
            </div>
            <button type="button" id="add-feature" class="btn btn-success" style="margin: 5px;">Add Features</button>

            <br>
            <br>
            <br>

            <h2 style="align-items: center; text-align: center;">YouTube Video link</h2>
            <!-- YouTube Link -->
            <label class="label">YouTube video key</label>
            <input class="form-control" type="text" name="youtube" value="<%= project.youtube %>"
                placeholder="YouTube Link" />

            <br>
            <br>
            <br>

            <h2 style="align-items: center; text-align: center;">Map Data </h2>
            <!-- Map Coordinates -->
            <label class="label">Latitude</label>
            <input class="form-control" type="text" name="mapV" value="<%= project.mapV %>" placeholder="Latitude" />
            <label class="label">Longitude</label>
            <input class="form-control" type="text" name="mapH" value="<%= project.mapH %>" placeholder="Longitude" />

            <br>
            <br>
            <br>

            <h2 style="align-items: center; text-align: center;">Type of Project</h2>
            <!-- Type -->
            <label class="label">Type</label>
            <select class="form-control" name="type" required>
                <option value="">Select Type</option>
                <option value="Residential" <%=project.type==="Residential" ? "selected" : "" %>>Residential</option>
                <option value="Commercial" <%=project.type==="Commercial" ? "selected" : "" %>>Commercial</option>
            </select>

            <br>
            <br>
            <br>

            <h2 style="align-items: center; text-align: center;">Images of project</h2>
            <!-- Images (Multiple File Upload) -->
            <label class="label">Images</label>
            <input type="file" name="image" accept="image/*" multiple />

            <!-- Add a hidden input field to store the existing image filenames -->
            <% for (let i=0; i < project.images.length; i++) { %>
                <input type="hidden" name="existingImages[]" value="<%= project.images[i] %>" />
                <% } %>
        </div>
        <button class="btn btn-primary" type="submit" name="button">Update</button>
    </form>
    <!-- Add your JavaScript code for handling dynamic input fields, if needed -->
    <script>

        document.addEventListener("DOMContentLoaded", function () {
            const specificationsContainer = document.getElementById("specifications-container");
            const addSpecificationButton = document.getElementById("add-specification");

            // Function to add a new specification input field
            function addSpecificationInput() {
                const newSpecificationInput = document.createElement("div");
                newSpecificationInput.className = "specification-input";
                newSpecificationInput.innerHTML = `
                    <label class="label">Specification ${specificationsContainer.children.length + 1}</label>
                    <input class="form-control" type="text" name="specifications[]" placeholder="Specification ${specificationsContainer.children.length + 1}" />
                    <button type="button" class="remove-specification btn btn-danger"
                                style="margin: 5px;">Remove</button>
                    `;
                specificationsContainer.appendChild(newSpecificationInput);
            }

            // Function to remove a specification input field
            function removeSpecificationInput(event) {
                const specificationInput = event.target.closest(".specification-input");
                if (specificationInput) {
                    specificationsContainer.removeChild(specificationInput);
                    // Update the labels and placeholders of remaining input fields
                    const specificationInputs = specificationsContainer.querySelectorAll(".specification-input");
                    specificationInputs.forEach((input, index) => {
                        const label = input.querySelector("label");
                        const inputField = input.querySelector("input");
                        label.textContent = `Specification ${index + 1}`;
                        inputField.placeholder = `Specification ${index + 1}`;
                    });
                }
            }

            // Event listeners
            addSpecificationButton.addEventListener("click", addSpecificationInput);
            specificationsContainer.addEventListener("click", (event) => {
                if (event.target.classList.contains("remove-specification")) {
                    removeSpecificationInput(event);
                }
            });
        });
    </script>

    <script>
        // Function to add a new feature input
        function addFeature() {
            const featureContainer = document.getElementById("feature-container");
            const featureInput = document.createElement("div");
            featureInput.classList.add("feature-input");

            const featureNumber = featureContainer.getElementsByClassName("feature-input").length + 1;

            featureInput.innerHTML = `
                        <label class="label">Feature ${featureNumber}</label>
                        <input class="form-control" type="text" name="features[]" placeholder="Feature ${featureNumber}" />
                        <button type="button" class="remove-specification btn btn-danger"
                                style="margin: 5px;">Remove</button>
                    `;

            featureContainer.appendChild(featureInput);
        }

        // Function to remove a feature input
        function removeFeature(event) {
            const featureInput = event.target.closest(".feature-input");
            if (featureInput) {
                featureInput.remove();
            }
        }

        // Add event listener to the "Add Feature" button
        document.getElementById("add-feature").addEventListener("click", addFeature);

        // Add event listener to dynamically added "Remove Feature" buttons
        document.addEventListener("click", function (event) {
            if (event.target && event.target.classList.contains("remove-feature")) {
                removeFeature(event);
            }
        });
    </script>